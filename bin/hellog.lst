# source: main.asm
    1 0000             	; MSX-DOS function codes
    2 0000             	_STROUT equ 09h
    3 0000             	_CONOUT equ 02h
    4 0000             	; MSX-DOS entry point
    5 0000             	BDOS equ 0005h
    6 0000             	
    7 0000             	; Our program!
    8 0000             	    org 0100h
    9 0100             	START:
   10 0100 11 23 01    	    ld de, TXT_HELLO1
   11 0103 0E 09       	    ld c, _STROUT
   12 0105 CD 05 00    	    call BDOS
   13 0108 21 2E 01    	    ld hl, TXT_HELLO2
   14 010B CD 15 01    	    call PRINT
   15 010E             	    ; the following should trigger an error
   16 010E 21 45 01    	    ld hl, TXT_ERROR
   17 0111 CD 15 01    	    call PRINT
   18 0114 C9          	    ret 
   19 0115             	
   20 0115             	; PRINT a zero-terminated string in MSX-DOS
   21 0115             	; INPUT: HL points to start of string
   22 0115             	PRINT:
   23 0115             	    ; Check if the passed HL lies between start and end
   24 0115             	    ;
   25 0115             	    ; ASSERT HL>=TXT_ZERO_TERMINATED_START && HL<TXT_ZERO_TERMINATED_END
   26 0115 7E          	    ld a, (hl)
   27 0116 A7          	    and a
   28 0117 C8          	    ret z
   29 0118             	    ;
   30 0118 E5          	    push hl
   31 0119 5F          	    ld e, a
   32 011A 0E 02       	    ld c, _CONOUT
   33 011C CD 05 00    	    call BDOS
   34 011F E1          	    pop hl
   35 0120             	    ;
   36 0120 23          	    inc hl
   37 0121 18 F2       	    jr PRINT
   38 0123             	
   39 0123 48 65 6C 6C 6F 20 4D 53 58 21 24 	TXT_HELLO1 DB "Hello MSX!$"
   40 012E             	TXT_ZERO_TERMINATED_START
   41 012E 0D 0A 44 65 62 75 67 67 69 6E 67 20 77 69 74 68 20 44 65 7A 6F 67 00 	TXT_HELLO2 DB "\r\nDebugging with Dezog",0
   42 0145             	TXT_ZERO_TERMINATED_END
   43 0145             	
   44 0145 00          	TXT_ERROR  DB 0
   45 0146             	
